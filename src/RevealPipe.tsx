import * as React from "react";

import { RevealPipeContainer } from "./RevealPipe.styles";

export type PipeName = "water" | "sewer" | "fiber";

export type RevealPipeProps = {
  pipeName: PipeName;
  pipeColor: string;
  isActive: boolean;
  handleClick: (pipe: PipeName) => void;
};

export const RevealPipe = ({
  pipeName,
  pipeColor,
  isActive,
  handleClick,
}: RevealPipeProps): React.ReactElement => {
  console.log("isMobile");
  console.log("userAgent", navigator.userAgent);
  return (
    <RevealPipeContainer
      $isActive={isActive}
      onClick={() => handleClick(pipeName)}
    >
      <button
        className={`pipe ${isActive ? "active" : ""}`}
        onClick={() => handleClick(pipeName)}
      >
        {getPipe(pipeColor)}
      </button>
      <div className="mirror-pipe">
        <div className="svg-wrapper">{getPipe(pipeColor)}</div>
      </div>
    </RevealPipeContainer>
  );
};

const getPipe = (pipeColor: string) => (
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 73 64" fill="none">
    <path
      d="M36.2737 0.830302C25.9722 0.830302 16.6419 1.51812 9.96281 2.61187C6.62312 3.15874 3.93828 3.81562 2.19984 4.48843C1.33062 4.82515 0.701406 5.17468 0.383594 5.42905C0.284063 5.50874 0.271094 5.53062 0.235156 5.56921C0.271094 5.60749 0.283906 5.63015 0.383594 5.70983C0.701406 5.96405 1.33047 6.31358 2.19969 6.64999C3.93797 7.32296 6.62281 7.97999 9.96219 8.52686C16.6416 9.62061 25.9716 10.3081 36.2734 10.3081C46.575 10.3081 55.9052 9.62061 62.5844 8.52686C65.9241 7.97999 68.6089 7.3228 70.3472 6.64983C71.2162 6.31343 71.8452 5.9639 72.1628 5.70968C72.2628 5.62999 72.2758 5.60733 72.3116 5.56905C72.2756 5.53046 72.2627 5.50812 72.1631 5.42843C71.8452 5.17437 71.2162 4.82483 70.3472 4.48827C68.6089 3.8153 65.9241 3.15827 62.5844 2.61171C55.9052 1.51796 46.575 0.829834 36.2734 0.829834L36.2737 0.830302ZM36.2188 2.26515C41.3608 2.26522 46.3834 2.42132 50.6322 2.71312V6.97218C46.3866 7.26497 41.3637 7.42206 36.2188 7.42296C29.4306 7.42295 22.9205 7.15128 18.1203 6.66771C13.3201 6.18414 10.623 5.52827 10.6222 4.84437C10.6216 4.50566 11.2832 4.17026 12.5693 3.85732C13.8553 3.54439 15.7407 3.26003 18.1176 3.02051C20.4945 2.78099 23.3164 2.59098 26.4223 2.46135C29.5281 2.33172 32.857 2.26515 36.2188 2.26515ZM53.4447 2.94046C56.0767 3.18173 58.1805 3.47565 59.6218 3.80344C61.063 4.13123 61.8101 4.4857 61.8153 4.84421C61.8097 5.20267 61.0624 5.55708 59.6212 5.88481C58.1799 6.21255 56.0763 6.50641 53.4447 6.74765V2.9403V2.94046ZM0.125 8.81702V25.4133H0.149062V26.7547C0.151406 26.6731 0.2 26.8747 0.770469 27.2203C1.43844 27.6245 2.60547 28.1 4.15484 28.5394C4.69203 28.6919 5.27875 28.8409 5.90641 28.9866V10.6234C4.05641 10.2197 2.47359 9.77186 1.18453 9.2728C0.825694 9.13451 0.472152 8.98247 0.125 8.81702ZM72.3125 8.86968C72.0006 9.01479 71.6839 9.14924 71.3628 9.2728C69.3028 10.0703 66.4912 10.7373 63.0391 11.3025C56.1348 12.4331 46.7 13.1212 36.2737 13.1212C26.8294 13.1212 18.205 12.5553 11.5312 11.6087V30.0178C13.3875 30.2886 15.4306 30.5325 17.6406 30.7412C29.1448 31.8287 43.4025 31.8287 54.9069 30.7412C60.6589 30.1975 65.2941 29.4178 68.3925 28.5392C69.9417 28.0998 71.1091 27.6244 71.7769 27.22C72.0808 27.0359 72.2328 26.895 72.3125 26.8131V8.86968ZM3.71875 31.3356V63.7553H9.65625V32.5772C7.37969 32.2084 5.39188 31.7928 3.71875 31.3356ZM68.7188 31.3653C65.3703 32.2694 60.7828 33.0109 55.1714 33.5414C43.4516 34.6495 29.0958 34.6495 17.3761 33.5414C16.6608 33.4739 15.9628 33.4023 15.2812 33.3283V63.7553H68.7188V31.3653Z"
      fill={pipeColor}
    />
  </svg>
);
